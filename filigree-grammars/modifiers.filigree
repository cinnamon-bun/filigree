# words to test .s and .a
apple = apple
box = box
bus = bus
marsh = marsh
branch = branch
tomato = tomato
city = city

sExamples = S\n<apple.s>, <box.s>, <bus.s>, <marsh.s>, <tomato.s>, <city.s>, <branch.s>
aExamples = A\n<apple.a>, <box.a>

t = exaMPLE phrASE
caseExamples = CASE\noriginal: <t>\nuppercase: <t.uppercase>\nlowercase: <t.lowercase>\ntitlecase: <t.titlecase>\nsentencecase: <t.sentencecase>

s = [  a     b ]
spaceExamples = SPACES\noriginal: -<s>-\ntrim: -<s.trim>-\nmergespaces: -<s.mergespaces>-

sLead =      leading spaces are preserved
sTrail = trailing spaces are removed        
sBrak = [  all spaces in one-line brackets are preserved  ]
sMultiBrak = [
	leading and trailing spaces are trimmed from multi-line brackets   
]
spaceParseExamples = SPACE PARSING\nleading: -<sLead>-\ntrailing: -<sTrail>-\nbrakets: -<sBrak>-\nmulti-line brackets: -<sMultiBrak>-

h = hello
bad = BAD\n<h.foo>\n<h.foo.bar>\n<h.titlecase.foo>\n<h.foo.titlecase>

fun = FUN\noriginal: <h>\ninception: <h.inception>\nwackycase: <h.wackycase>

combo = COMBO\nbox.uppercase.s: <box.uppercase.s>\nbox.s.uppercase: <box.s.uppercase>

nltest = line1\nline2
newline = NEWLINE\ninception should work with a newline in it: <nltest.inception>

em = [‚≠êÔ∏è/üåô/‚ú®/üçÉ/üå±]
em3 = <em><em><em>
emoji = EMOJI\n-<em3>-\ninception: -<em3.inception>-


start = <sExamples>\n\n<aExamples>\n\n<caseExamples>\n\n<spaceExamples>\n\n<spaceParseExamples>\n\n<fun>\n\n<combo>\n\n<newline>\n\n<emoji>\n\n<bad>